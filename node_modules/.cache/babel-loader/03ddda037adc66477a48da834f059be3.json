{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neeth\\\\Documents\\\\GitHub\\\\NUSAssist\\\\NUSAssist\\\\src\\\\components\\\\task-manager\\\\components\\\\wrappers\\\\KeyStrokeHandler.js\";\nimport React, { Component } from 'react';\nimport { getNextModeByKey } from '../../services/mode';\nimport { wrapChildrenWith } from '../../util/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KeyStrokeHandler extends Component {\n  componentWillMount() {\n    window.addEventListener('keydown', this.handleKeyUp.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyUp);\n  }\n\n  handleKeyUp(e) {\n    const {\n      mode\n    } = this.props.data;\n    const nextMode = getNextModeByKey(mode, e.keyCode);\n\n    if (nextMode !== mode) {\n      e.preventDefault();\n      this.props.actions.changeMode(nextMode);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: wrapChildrenWith(this.props.children, this.props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default KeyStrokeHandler;","map":{"version":3,"names":["React","Component","getNextModeByKey","wrapChildrenWith","KeyStrokeHandler","componentWillMount","window","addEventListener","handleKeyUp","bind","componentWillUnmount","removeEventListener","e","mode","props","data","nextMode","keyCode","preventDefault","actions","changeMode","render","children"],"sources":["C:/Users/neeth/Documents/GitHub/NUSAssist/NUSAssist/src/components/task-manager/components/wrappers/KeyStrokeHandler.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {getNextModeByKey} from '../../services/mode';\r\nimport {wrapChildrenWith} from '../../util/common';\r\n\r\nclass KeyStrokeHandler extends Component {\r\n    componentWillMount() {\r\n        window.addEventListener('keydown', this.handleKeyUp.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyUp);\r\n    }\r\n\r\n    handleKeyUp(e) {\r\n        const {mode} = this.props.data;\r\n        const nextMode = getNextModeByKey(mode, e.keyCode);\r\n\r\n        if (nextMode !== mode) {\r\n            e.preventDefault();\r\n            this.props.actions.changeMode(nextMode);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{wrapChildrenWith(this.props.children, this.props)}</div>;\r\n    }\r\n}\r\n\r\nexport default KeyStrokeHandler;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;EACrCI,kBAAkB,GAAG;IACjBC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnC;EACH;;EAEDC,oBAAoB,GAAG;IACnBJ,MAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,WAA3C;EACH;;EAEDA,WAAW,CAACI,CAAD,EAAI;IACX,MAAM;MAACC;IAAD,IAAS,KAAKC,KAAL,CAAWC,IAA1B;IACA,MAAMC,QAAQ,GAAGd,gBAAgB,CAACW,IAAD,EAAOD,CAAC,CAACK,OAAT,CAAjC;;IAEA,IAAID,QAAQ,KAAKH,IAAjB,EAAuB;MACnBD,CAAC,CAACM,cAAF;MACA,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,UAAnB,CAA8BJ,QAA9B;IACH;EACJ;;EAEDK,MAAM,GAAG;IACL,oBAAO;MAAA,UAAMlB,gBAAgB,CAAC,KAAKW,KAAL,CAAWQ,QAAZ,EAAsB,KAAKR,KAA3B;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;AArBoC;;AAwBzC,eAAeV,gBAAf"},"metadata":{},"sourceType":"module"}