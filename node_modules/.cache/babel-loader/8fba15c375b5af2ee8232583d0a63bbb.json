{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neeth\\\\Documents\\\\GitHub\\\\NUSAssist\\\\NUSAssist\\\\src\\\\components\\\\task-manager\\\\components\\\\wrappers\\\\StateProvider.js\";\nimport React, { Component } from 'react';\nimport { FILTER_ALL } from '../../services/filter';\nimport { MODE_CREATE, MODE_NONE } from '../../services/mode';\nimport { objectWithOnly, wrapChildrenWith } from '../../util/common';\nimport { getAll, addToList, updateStatus } from '../../services/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StateProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      mode: MODE_CREATE,\n      filter: FILTER_ALL,\n      list: getAll()\n    };\n  }\n\n  render() {\n    let children = wrapChildrenWith(this.props.children, {\n      data: this.state,\n      actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  addNew(text) {\n    let updatedList = addToList(this.state.list, {\n      text,\n      completed: false\n    });\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  changeFilter(filter) {\n    this.setState({\n      filter\n    });\n  }\n\n  changeStatus(itemId, completed) {\n    const updatedList = updateStatus(this.state.list, itemId, completed);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  changeMode() {\n    let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MODE_NONE;\n    this.setState({\n      mode\n    });\n  }\n\n  setSearchQuery(text) {\n    this.setState({\n      query: text || ''\n    });\n  }\n\n}\n\nexport default StateProvider;","map":{"version":3,"names":["React","Component","FILTER_ALL","MODE_CREATE","MODE_NONE","objectWithOnly","wrapChildrenWith","getAll","addToList","updateStatus","StateProvider","constructor","state","query","mode","filter","list","render","children","props","data","actions","addNew","text","updatedList","completed","setState","changeFilter","changeStatus","itemId","changeMode","setSearchQuery"],"sources":["C:/Users/neeth/Documents/GitHub/NUSAssist/NUSAssist/src/components/task-manager/components/wrappers/StateProvider.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {FILTER_ALL} from '../../services/filter';\r\nimport {MODE_CREATE, MODE_NONE} from '../../services/mode';\r\nimport {objectWithOnly, wrapChildrenWith} from '../../util/common';\r\nimport {getAll, addToList, updateStatus} from '../../services/todo';\r\n\r\nclass StateProvider extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            query: '',\r\n            mode: MODE_CREATE,\r\n            filter: FILTER_ALL,\r\n            list: getAll()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let children = wrapChildrenWith(this.props.children, {\r\n            data: this.state,\r\n            actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\r\n        });\r\n\r\n        return <div>{children}</div>;\r\n    }\r\n\r\n    addNew(text) {\r\n        let updatedList = addToList(this.state.list, {text, completed: false});\r\n\r\n        this.setState({list: updatedList});\r\n    }\r\n\r\n    changeFilter(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    changeStatus(itemId, completed) {\r\n        const updatedList = updateStatus(this.state.list, itemId, completed);\r\n\r\n        this.setState({list: updatedList});\r\n    }\r\n\r\n    changeMode(mode = MODE_NONE) {\r\n        this.setState({mode});\r\n    }\r\n\r\n    setSearchQuery(text) {\r\n        this.setState({query: text || ''});\r\n    }\r\n}\r\n\r\nexport default StateProvider;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,qBAArC;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,mBAA/C;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,YAA3B,QAA8C,qBAA9C;;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;EAClCU,WAAW,GAAG;IACV;IACA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE,EADE;MAETC,IAAI,EAAEX,WAFG;MAGTY,MAAM,EAAEb,UAHC;MAITc,IAAI,EAAET,MAAM;IAJH,CAAb;EAMH;;EAEDU,MAAM,GAAG;IACL,IAAIC,QAAQ,GAAGZ,gBAAgB,CAAC,KAAKa,KAAL,CAAWD,QAAZ,EAAsB;MACjDE,IAAI,EAAE,KAAKR,KADsC;MAEjDS,OAAO,EAAEhB,cAAc,CAAC,IAAD,EAAO,CAAC,QAAD,EAAW,cAAX,EAA2B,cAA3B,EAA2C,YAA3C,EAAyD,gBAAzD,CAAP;IAF0B,CAAtB,CAA/B;IAKA,oBAAO;MAAA,UAAMa;IAAN;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAEDI,MAAM,CAACC,IAAD,EAAO;IACT,IAAIC,WAAW,GAAGhB,SAAS,CAAC,KAAKI,KAAL,CAAWI,IAAZ,EAAkB;MAACO,IAAD;MAAOE,SAAS,EAAE;IAAlB,CAAlB,CAA3B;IAEA,KAAKC,QAAL,CAAc;MAACV,IAAI,EAAEQ;IAAP,CAAd;EACH;;EAEDG,YAAY,CAACZ,MAAD,EAAS;IACjB,KAAKW,QAAL,CAAc;MAACX;IAAD,CAAd;EACH;;EAEDa,YAAY,CAACC,MAAD,EAASJ,SAAT,EAAoB;IAC5B,MAAMD,WAAW,GAAGf,YAAY,CAAC,KAAKG,KAAL,CAAWI,IAAZ,EAAkBa,MAAlB,EAA0BJ,SAA1B,CAAhC;IAEA,KAAKC,QAAL,CAAc;MAACV,IAAI,EAAEQ;IAAP,CAAd;EACH;;EAEDM,UAAU,GAAmB;IAAA,IAAlBhB,IAAkB,uEAAXV,SAAW;IACzB,KAAKsB,QAAL,CAAc;MAACZ;IAAD,CAAd;EACH;;EAEDiB,cAAc,CAACR,IAAD,EAAO;IACjB,KAAKG,QAAL,CAAc;MAACb,KAAK,EAAEU,IAAI,IAAI;IAAhB,CAAd;EACH;;AA1CiC;;AA6CtC,eAAeb,aAAf"},"metadata":{},"sourceType":"module"}